{
  // See: https://www.typescriptlang.org/tsconfig/#Type_Checking_6248
  "compilerOptions": {
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    // "strictNullChecks": true,                           /* When type checking, take into account 'null' and 'undefined'. */
    // "strictBindCallApply": true,                        /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    // "strictBuiltinIteratorReturn": true,                /* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */
    // "strictFunctionTypes": true,                        /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    // "strictPropertyInitialization": true,               /* Check for class properties that are declared but not set in the constructor. */
    // "useUnknownInCatchVariables": true,                 /* Default catch clause variables as 'unknown' instead of 'any'. */
    // "noImplicitAny": true,                              /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    // "noImplicitThis": true,                             /* Enable error reporting when 'this' is given the type 'any'. */
    "allowUnreachableCode": false, /* Disable error reporting for unreachable code. */
    "allowUnusedLabels": false, /* Disable error reporting for unused labels. */
    "alwaysStrict": true, /* Ensure 'use strict' is always emitted. */
    "exactOptionalPropertyTypes": true, /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type. */
    // "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
  }
}